version: 2.1

# Pipeline parameters
parameters:
  run_all:
    type: boolean
    default: true
  run_smoke_only:
    type: boolean
    default: false
  run_sanity_only:
    type: boolean
    default: false
  run_regression_only:
    type: boolean
    default: false
  run_ui_only:
    type: boolean
    default: false
  run_api_only:
    type: boolean
    default: false

# Reusable commands
commands:
  simulate_and_publish:
    description: "Simulate test execution and publish results"
    parameters:
      suite:
        type: string
        description: "Test suite name"
    steps:
      - checkout
      - run:
          name: "Run << parameters.suite >> tests"
          command: |
            SUITE="<< parameters.suite >>"
            echo "===================================="
            echo "Running $SUITE tests..."
            echo "===================================="
            
            # Create directories
            mkdir -p test-results/$SUITE
            mkdir -p artifacts
            
            # Simulate test execution time
            echo "Setting up test environment for $SUITE..."
            sleep 2
            
            echo "Executing $SUITE test cases..."
            sleep 3
            
            # Create JUnit XML file using escaped heredoc
            cat > test-results/$SUITE/junit.xml \<<EOF
            <?xml version="1.0" encoding="UTF-8"?>
            <testsuite name="$SUITE" tests="2" failures="0" errors="0" time="5.0">
              <testcase classname="$SUITE.TestSuite" name="test_case_1" time="2.5"/>
              <testcase classname="$SUITE.TestSuite" name="test_case_2" time="2.5"/>
            </testsuite>
            EOF
            
            # Create artifact file
            echo "$SUITE test execution completed successfully" > artifacts/$SUITE-report.txt
            echo "Test suite: $SUITE" >> artifacts/$SUITE-report.txt
            echo "Execution time: $(date)" >> artifacts/$SUITE-report.txt
            echo "Status: PASSED" >> artifacts/$SUITE-report.txt
            
            echo "===================================="
            echo "$SUITE tests completed successfully!"
            echo "===================================="
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: artifacts
          destination: test-reports

# Job definitions
jobs:
  smoke-tests:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - simulate_and_publish:
          suite: "smoke"

  sanity-tests:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - simulate_and_publish:
          suite: "sanity"

  regression-tests:
    docker:
      - image: cimg/base:stable
    resource_class: medium
    steps:
      - simulate_and_publish:
          suite: "regression"

  ui-tests:
    docker:
      - image: cimg/base:stable
    resource_class: medium
    steps:
      - simulate_and_publish:
          suite: "ui"

  api-tests:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - simulate_and_publish:
          suite: "api"

# Workflow definitions
workflows:
  version: 2
  
  # Full test suite workflow
  all-suites:
    when: << pipeline.parameters.run_all >>
    jobs:
      - smoke-tests
      - sanity-tests
      - api-tests
      - ui-tests
      - regression-tests:
          requires:
            - smoke-tests
            - sanity-tests

  # Individual test suite workflows
  smoke-only:
    when: << pipeline.parameters.run_smoke_only >>
    jobs:
      - smoke-tests

  sanity-only:
    when: << pipeline.parameters.run_sanity_only >>
    jobs:
      - sanity-tests

  regression-only:
    when: << pipeline.parameters.run_regression_only >>
    jobs:
      - regression-tests

  ui-only:
    when: << pipeline.parameters.run_ui_only >>
    jobs:
      - ui-tests

  api-only:
    when: << pipeline.parameters.run_api_only >>
    jobs:
      - api-tests