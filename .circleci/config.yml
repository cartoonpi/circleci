version: 2.1

parameters:
  # Choose which workflow to run when triggering a pipeline
  run_all:
    type: boolean
    default: true
  run_smoke_only:
    type: boolean
    default: false
  run_sanity_only:
    type: boolean
    default: false
  run_regression_only:
    type: boolean
    default: false
  run_ui_only:
    type: boolean
    default: false
  run_api_only:
    type: boolean
    default: false

commands:
  simulate_and_publish:
    parameters:
      suite:
        type: string
    steps:
      - checkout
- run:
    name: "Run << parameters.suite >> tests"
    command: |
      SUITE="<< parameters.suite >>"
      echo "Running $SUITE tests..."
      mkdir -p test-results/$SUITE artifacts
      # Create a tiny JUnit file so CircleCI shows the Tests tab.
      cat > test-results/$SUITE/junit.xml <<EOF
      <testsuite name="$SUITE" tests="2" failures="0">
        <testcase classname="sample" name="test_case_1"/>
        <testcase classname="sample" name="test_case_2"/>
      </testsuite>
      EOF
      # Create a simple artifact file
      echo "$SUITE test artifact" > artifacts/$SUITE-report.txt
      echo "Done."
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: artifacts
          destination: artifacts


jobs:
  smoke-tests:
    docker: [ { image: cimg/base:stable } ]
    steps:
      - simulate_and_publish:
          suite: "smoke"

  sanity-tests:
    docker: [ { image: cimg/base:stable } ]
    steps:
      - simulate_and_publish:
          suite: "sanity"

  regression-tests:
    docker: [ { image: cimg/base:stable } ]
    steps:
      - simulate_and_publish:
          suite: "regression"

  ui-tests:
    docker: [ { image: cimg/base:stable } ]
    steps:
      - simulate_and_publish:
          suite: "ui"

  api-tests:
    docker: [ { image: cimg/base:stable } ]
    steps:
      - simulate_and_publish:
          suite: "api"

workflows:
  # Full suite workflow (with a dependency to show ordering)
  all-suites:
    when: << pipeline.parameters.run_all >>
    jobs:
      - smoke-tests
      - sanity-tests
      - regression-tests:
          requires:
            - smoke-tests
      - ui-tests
      - api-tests

  # Targeted workflows you can trigger via parameters
  smoke-only:
    when: << pipeline.parameters.run_smoke_only >>
    jobs:
      - smoke-tests

  sanity-only:
    when: << pipeline.parameters.run_sanity_only >>
    jobs:
      - sanity-tests

  regression-only:
    when: << pipeline.parameters.run_regression_only >>
    jobs:
      - regression-tests

  ui-only:
    when: << pipeline.parameters.run_ui_only >>
    jobs:
      - ui-tests

  api-only:
    when: << pipeline.parameters.run_api_only >>
    jobs:
      - api-tests
